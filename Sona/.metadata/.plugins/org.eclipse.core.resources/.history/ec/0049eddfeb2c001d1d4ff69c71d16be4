/*=========================================================
*Copyright(c) 2022 CyberLogitec
*@FileName : ClassCommentUtils.java
*@FileTitle : ClassCommentUtils
*Open Issues :
*Change history :
*@LastModifyDate : 2022.08.11
*@LastModifier : 
*@LastVersion : 1.0
* 2022.08.11
* 1.0 Creation
=========================================================*/
package org.sonar.samples.java.utils;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.EnumMap;
import java.util.HashMap;
import java.util.List;
import java.util.regex.Pattern;
import java.util.stream.Collectors;

import org.sonar.plugins.java.api.JavaFileScannerContext;
import org.sonar.plugins.java.api.tree.ClassTree;
import org.sonar.plugins.java.api.tree.MethodTree;
import org.sonar.plugins.java.api.tree.SyntaxTrivia;
import org.sonar.samples.java.utils.MethodCommentUtils.Type;

/**
 * Utility Class Comment
 * 
 * @author tathienphuoc
 * @see ClassCommentUtils
 * @since J2EE 1.6
 */
public class ClassCommentUtils {
	private static List<String> classComments;
	private static EnumMap<Type, ArrayList<String>> commentLineTypes;
	private static HashMap<String, Integer> errMsgs;
	private static String prefix;

	public enum Type {
		DESCRIPTION, EMPTY_LINE, AUTHOR, SEE, SINCE, OTHER, EMPTY_LINE_WITHOUT_ASTERISK, INVALID_LINE_FORMAT,
		INVALID_AUTHOR_FORMAT, INVALID_DESCRIPTION_FORMAT;

		String errMsg = "";
		private Pattern regex;

		static {
			EMPTY_LINE.errMsg = CommonMessage.REMOVE_EMPTY_LINE;
			EMPTY_LINE_WITHOUT_ASTERISK.errMsg = CommonMessage.REMOVE_EMPTY_LINE_WITHOUT_ASTERISK;
			INVALID_LINE_FORMAT.errMsg = CommonMessage.INVALID_LINE_FORMAT;
			INVALID_DESCRIPTION_FORMAT.errMsg = CommonMessage.INVALID_DESCRIPTION_FORMAT;
			INVALID_PARAM_FORMAT.errMsg = CommonMessage.INVALID_PARAM_FORMAT;
			INVALID_RETURN_FORMAT.errMsg = CommonMessage.INVALID_RETURN_FORMAT;
			INVALID_EXCEPTION_FORMAT.errMsg = CommonMessage.INVALID_EXCEPTION_FORMAT;

			DESCRIPTION.regex = Pattern.compile("^\\*\\s+[^@\\s]+.*$");
			INVALID_LINE_FORMAT.regex = Pattern.compile("^(?!\\* \\S+).*$");
		}

	}
}