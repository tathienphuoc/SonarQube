package org.sonar.samples.java.utils;

import java.util.regex.Pattern;

import org.sonar.samples.java.utils.MethodCommentUtils_bk.Type;

public enum CommonType {
	DESCRIPTION, EMPTY_LINE, PARAM, RETURN, EXCEPTION, OTHER, EMPTY_LINE_WITHOUT_ASTERISK, INVALID_LINE_FORMAT,
	INVALID_PARAM_FORMAT, INVALID_DESCRIPTION_FORMAT, INVALID_RETURN_FORMAT, INVALID_EXCEPTION_FORMAT,
	INVALID_EXTRA_WHITESPACE_FORMAT;

	String errMsg = "";

	static {
		EMPTY_LINE.errMsg = CommonMessage.REMOVE_EMPTY_LINE;
		EMPTY_LINE_WITHOUT_ASTERISK.errMsg = CommonMessage.REMOVE_EMPTY_LINE_WITHOUT_ASTERISK;
		INVALID_LINE_FORMAT.errMsg = CommonMessage.INVALID_LINE_FORMAT;
		INVALID_DESCRIPTION_FORMAT.errMsg = CommonMessage.INVALID_DESCRIPTION_FORMAT;
		INVALID_PARAM_FORMAT.errMsg = CommonMessage.METHOD_INVALID_PARAM_FORMAT;
		INVALID_RETURN_FORMAT.errMsg = CommonMessage.METHOD_INVALID_RETURN_FORMAT;
		INVALID_EXCEPTION_FORMAT.errMsg = CommonMessage.METHOD_INVALID_EXCEPTION_FORMAT;
//		INVALID_EXTRA_WHITESPACE_FORMAT.errMsg = CommonMessage.METHOD_REMOVE_EXTRA_WHITESPACE;
	}

	public static CommonType getType(String line) {// line==null is necessary?
		if (line.isEmpty()) {// line==null is necessary?
			return EMPTY_LINE_WITHOUT_ASTERISK;
		} else if (line.equals("*")) {// *
			return EMPTY_LINE;
		}

	}
}